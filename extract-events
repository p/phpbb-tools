#!/usr/bin/env python

import subprocess, re

def get_files_matching(query):
    output = subprocess.check_output(['git', 'grep', '-l', query])
    files = output.strip().split("\n")
    return files

def extract_event_name(line):
    match = re.search(r"'([^']+)'", line)
    assert match
    event_name = match.group(1)
    return event_name

def get_lines_in_file(file):
    with open(file) as f:
        lines = f.readlines()
        for index in range(len(lines)):
            line = lines[index]
            yield line, index, lines

def calculate_indent(line):
    match = re.match(r'(\s+)', line)
    if match:
        indent = len(match.group(1))
    else:
        indent = 0
    return indent

class Scope(object):
    pass

def determine_scope(line, index, lines, file):
    indent = calculate_indent(line)
    scope = Scope()
    scope.file = file
    if indent == 0:
        # top level, must be file scope
        pass
    return 'file: %s' % scope.file

for file in get_files_matching("trigger_event('"):
    for line, index, lines in get_lines_in_file(file):
        if line.find("trigger_event('") >= 0 and line.strip().find('extract') == 0:
            event_name = extract_event_name(line)
            search_index = index - 1
            vars = None
            while search_index >= 0:
                search_line = lines[search_index]
                if search_line.strip().find('$vars = array') == 0:
                    # vars could be empty
                    match = re.search("'.*'", search_line)
                    assert match
                    vars = [var.strip()[1:-1] for var in match.group(0).split(',')]
                    break
                search_index -= 1
            assert vars is not None
            scope = determine_scope(line, index, lines, file)
            print event_name, '(' + ', '.join(vars) + ')', scope

for file in get_files_matching("phpbb_dispatcher->dispatch('"):
    for line, index, lines in get_lines_in_file(file):
        if line.find('dispatcher->dispatch') >= 0 and line.strip().find('$phpbb_dispatcher') == 0:
            event_name = extract_event_name(line)
            scope = determine_scope(line, index, lines, file)
            print event_name, scope
